xlab("Sex") +
ylab("Count") +
ggtitle("Distribution by Sex") +
theme_minimal()
cor_matrix <- cor(data)
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + poly(log.lvmi, 3), data = data, x=T)
summary(augmented_model_2)
augmented_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + log.lvmi, data = data, x=T)
summary(augmented_model)
base_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix, data = data, x=T)
summary(base_model)
augmented_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + log.lvmi, data = data, x=T)
summary(augmented_model)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # For plotting
library(dplyr) # For data handling
library(readr)
library(survival) # Main library, used for implementing Cox Modeling
library(pROC) # For plotting ROC curves
library(survminer)
library(utils) #For not having to upload the txt each time
library(riskRegression) # For performance indicators
#setwd('~/Desktop/Data Science/Data Science Lab in Medicine/Big Data in Health Care/')
url <- "https://raw.githubusercontent.com/darthgween/BigDataInHealthCareProject/main/heart.valve.txt?token=GHSAT0AAAAAACR3GYSXO5Z3ARKVQY2S6SYSZRYZQWA"
data <- read.table(url, header = TRUE)
head(data)
data$sex <- factor(data$sex, levels = c(0, 1), labels = c("Male", "Female"))
data$con.cabg <- factor(data$con.cabg, levels = c(0, 1), labels = c("No", "Yes"))
data$lv <- factor(data$lv, levels = c(1, 2, 3), labels = c("High", "Moderate", "Low"))
data$sten.reg.mix <- factor(data$sten.reg.mix, levels = c(1, 2, 3), labels = c("Stenosis", "Regurgitation", "Mixed"))
ggplot(data, aes(x = factor(status), y = log.lvmi, fill = factor(status))) +
geom_boxplot() +
ggtitle("Boxplot of log.lvmi for Status") +
xlab("Status") +
ylab("log.lvmi") +
scale_fill_discrete(name = "Status")
dim(data)
str(data)
summary(data)
ggplot(data, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
ggtitle("Distribuzione dell'età") +
xlab("Età") +
ylab("Frequenza")
sum_males <- sum(data$sex == "Male")
sum_females <- sum(data$sex == "Female")
cat("Number of males:", sum_males, "\n")
cat("Number of females:", sum_females, "\n")
ggplot(data, aes(x = sex, fill = sex)) +
geom_bar() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution by Sex") +
theme_minimal()
cor_matrix <- cor(data)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test <- cox.zph(base_model)
base_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix, data = data, x=T)
summary(base_model)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # For plotting
library(dplyr) # For data handling
library(readr)
library(survival) # Main library, used for implementing Cox Modeling
library(pROC) # For plotting ROC curves
library(survminer)
library(utils) #For not having to upload the txt each time
library(riskRegression) # For performance indicators
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # For plotting
library(dplyr) # For data handling
library(readr)
library(survival) # Main library, used for implementing Cox Modeling
library(pROC) # For plotting ROC curves
library(survminer)
library(utils) #For not having to upload the txt each time
library(riskRegression) # For performance indicators
#setwd('~/Desktop/Data Science/Data Science Lab in Medicine/Big Data in Health Care/')
url <- "https://raw.githubusercontent.com/darthgween/BigDataInHealthCareProject/main/heart.valve.txt?token=GHSAT0AAAAAACR3GYSXO5Z3ARKVQY2S6SYSZRYZQWA"
data <- read.table(url, header = TRUE)
head(data)
data$sex <- factor(data$sex, levels = c(0, 1), labels = c("Male", "Female"))
data$con.cabg <- factor(data$con.cabg, levels = c(0, 1), labels = c("No", "Yes"))
data$lv <- factor(data$lv, levels = c(1, 2, 3), labels = c("High", "Moderate", "Low"))
data$sten.reg.mix <- factor(data$sten.reg.mix, levels = c(1, 2, 3), labels = c("Stenosis", "Regurgitation", "Mixed"))
ggplot(data, aes(x = factor(status), y = log.lvmi, fill = factor(status))) +
geom_boxplot() +
ggtitle("Boxplot of log.lvmi for Status") +
xlab("Status") +
ylab("log.lvmi") +
scale_fill_discrete(name = "Status")
dim(data)
str(data)
summary(data)
ggplot(data, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
ggtitle("Distribuzione dell'età") +
xlab("Età") +
ylab("Frequenza")
sum_males <- sum(data$sex == "Male")
sum_females <- sum(data$sex == "Female")
cat("Number of males:", sum_males, "\n")
cat("Number of females:", sum_females, "\n")
ggplot(data, aes(x = sex, fill = sex)) +
geom_bar() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution by Sex") +
theme_minimal()
cor_matrix <- cor(data)
ggplot(data, aes(x = age, y = log.lvmi)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "red", se = FALSE) +
ggtitle("Scatter Plot: età vs log.lvmi") +
xlab("Età") +
ylab("log.lvmi")
# The outcome variable is a survival object created with the time to event (fuyrs) and status indicator (status)
surv_obj <- Surv(data$fuyrs, data$status)
# Perform Cox regression for each predictor
# Excluding paz.id from the analysis as it's an identifier, not a predictor
variables <- c("log.lvmi", "sex", "age", "con.cabg", "creat", "lv", "sten.reg.mix")
# Store results in a list for easy access
univariate_models <- list()
for (var in variables) {
# Formula to dynamically create the regression model
formula <- as.formula(paste("surv_obj ~", var))
# Fit the Cox model
model <- coxph(formula, data = data)
# Print the summary of the model
print(summary(model))
# Store the model in the list
univariate_models[[var]] <- model
}
univariate_models[["log.lvmi"]]
base_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix, data = data, x=T)
summary(base_model)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test <- cox.zph(base_model)
# Plotting the residuals to visually inspect any trend indicating non-proportionality
plot(ph_test)  # Multiple plots if more than one covariate; assess each plot for trends over time
# Output the global test of proportional hazards from cox.zph
print(ph_test) # This will display the test statistics and p-values for each covariate
# Check the linearity of continuous variables using Martingale residuals from a null model
null_model <- coxph(Surv(fuyrs, status) ~ 1, data = data) # Null model with no covariates
# Selecting continuous variables to check for non-linearity
continuous_vars <- c("age", "creat")
# Plot Martingale residuals against each continuous variable
for(var in continuous_vars) {
# Plot residuals against continuous variables
plot(data[[var]], residuals(null_model, type = "martingale"), xlab = var, ylab = "Martingale residuals", main = paste("Linearity Check for", var))
abline(h = 0, col = "red")  # Horizontal line at zero to aid in visual assessment
}
augmented_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + log.lvmi, data = data, x=T)
summary(augmented_model)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test_augmented <- cox.zph(augmented_model)
# Plotting the residuals to visually inspect any trend indicating non-proportionality
plot(ph_test_augmented)  # Multiple plots if more than one covariate; assess each plot for trends over time
# Output the global test of proportional hazards from cox.zph
print(ph_test_augmented) # This will display the test statistics and p-values for each covariate
# Selecting continuous variables to check for non-linearity
continuous_vars_augmented <- c("age", "creat", "log.lvmi")  # Now including log.lvmi
# Plot Martingale residuals against each continuous variable
for(var in continuous_vars_augmented) {
# Plot residuals against continuous variables
plot(data[[var]], residuals(null_model, type = "martingale"), xlab = var, ylab = "Martingale residuals", main = paste("Linearity Check for", var))
abline(h = 0, col = "red")  # Horizontal line at zero to aid in visual assessment
}
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + poly(log.lvmi, 3), data = data, x=T)
summary(augmented_model_2)
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + strata(log.lvmi), data = data, x=T)
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + strata(log.lvmi), data = data, x=T)
summary(augmented_model_2)
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + log.lvmi, data = data, x=T)
summary(augmented_model_2)
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + strata(log.lvmi), data = data, x=T)
summary(augmented_model_2)
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + log.lvmi, data = data, x=T)
summary(augmented_model_2)
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + strata(log.lvmi), data = data, x=T)
summary(augmented_model_2)
augmented_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + log.lvmi, data = data, x=T)
summary(augmented_model)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test_augmented <- cox.zph(augmented_model)
# Plotting the residuals to visually inspect any trend indicating non-proportionality
plot(ph_test_augmented)  # Multiple plots if more than one covariate; assess each plot for trends over time
# Output the global test of proportional hazards from cox.zph
print(ph_test_augmented) # This will display the test statistics and p-values for each covariate
# Selecting continuous variables to check for non-linearity
continuous_vars_augmented <- c("age", "creat", "log.lvmi")  # Now including log.lvmi
# Plot Martingale residuals against each continuous variable
for(var in continuous_vars_augmented) {
# Plot residuals against continuous variables
plot(data[[var]], residuals(null_model, type = "martingale"), xlab = var, ylab = "Martingale residuals", main = paste("Linearity Check for", var))
abline(h = 0, col = "red")  # Horizontal line at zero to aid in visual assessment
}
# Plotting the residuals to visually inspect any trend indicating non-proportionality
plot(ph_test_augmented, abline(h = 0, col = "red")  # Multiple plots if more than one covariate; assess each plot for trends over time
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test_augmented <- cox.zph(augmented_model)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test_augmented <- cox.zph(augmented_model)
# Plotting the residuals to visually inspect any trend indicating non-proportionality
plot(ph_test_augmented)  # Multiple plots if more than one covariate; assess each plot for trends over time
# Output the global test of proportional hazards from cox.zph
print(ph_test_augmented) # This will display the test statistics and p-values for each covariate
# Selecting continuous variables to check for non-linearity
continuous_vars_augmented <- c("age", "creat", "log.lvmi")  # Now including log.lvmi
# Plot Martingale residuals against each continuous variable
for(var in continuous_vars_augmented) {
# Plot residuals against continuous variables
plot(data[[var]], residuals(null_model, type = "martingale"), xlab = var, ylab = "Martingale residuals", main = paste("Linearity Check for", var))
abline(h = 0, col = "red")  # Horizontal line at zero to aid in visual assessment
}
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + strata(log.lvmi), data = data, x=T)
summary(augmented_model_2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # For plotting
library(dplyr) # For data handling
library(readr)
library(survival) # Main library, used for implementing Cox Modeling
library(pROC) # For plotting ROC curves
library(survminer)
library(utils) #For not having to upload the txt each time
library(riskRegression) # For performance indicators
#setwd('~/Desktop/Data Science/Data Science Lab in Medicine/Big Data in Health Care/')
url <- "https://raw.githubusercontent.com/darthgween/BigDataInHealthCareProject/main/heart.valve.txt?token=GHSAT0AAAAAACR3GYSXO5Z3ARKVQY2S6SYSZRYZQWA"
data <- read.table(url, header = TRUE)
head(data)
data$sex <- factor(data$sex, levels = c(0, 1), labels = c("Male", "Female"))
data$con.cabg <- factor(data$con.cabg, levels = c(0, 1), labels = c("No", "Yes"))
data$lv <- factor(data$lv, levels = c(1, 2, 3), labels = c("High", "Moderate", "Low"))
data$sten.reg.mix <- factor(data$sten.reg.mix, levels = c(1, 2, 3), labels = c("Stenosis", "Regurgitation", "Mixed"))
ggplot(data, aes(x = factor(status), y = log.lvmi, fill = factor(status))) +
geom_boxplot() +
ggtitle("Boxplot of log.lvmi for Status") +
xlab("Status") +
ylab("log.lvmi") +
scale_fill_discrete(name = "Status")
dim(data)
str(data)
summary(data)
ggplot(data, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
ggtitle("Distribuzione dell'età") +
xlab("Età") +
ylab("Frequenza")
sum_males <- sum(data$sex == "Male")
sum_females <- sum(data$sex == "Female")
cat("Number of males:", sum_males, "\n")
cat("Number of females:", sum_females, "\n")
ggplot(data, aes(x = sex, fill = sex)) +
geom_bar() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution by Sex") +
theme_minimal()
cor_matrix <- cor(data)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test_augmented <- cox.zph(augmented_model)
#cor_matrix <- cor(data)
#print(cor_matrix)
#if (!require(corrplot)) {
install.packages("corrplot")
library(corrplot)
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # For plotting
library(dplyr) # For data handling
library(readr)
library(survival) # Main library, used for implementing Cox Modeling
library(pROC) # For plotting ROC curves
library(survminer)
library(utils) #For not having to upload the txt each time
library(riskRegression) # For performance indicators
#setwd('~/Desktop/Data Science/Data Science Lab in Medicine/Big Data in Health Care/')
url <- "https://raw.githubusercontent.com/darthgween/BigDataInHealthCareProject/main/heart.valve.txt?token=GHSAT0AAAAAACR3GYSXO5Z3ARKVQY2S6SYSZRYZQWA"
data <- read.table(url, header = TRUE)
head(data)
data$sex <- factor(data$sex, levels = c(0, 1), labels = c("Male", "Female"))
data$con.cabg <- factor(data$con.cabg, levels = c(0, 1), labels = c("No", "Yes"))
data$lv <- factor(data$lv, levels = c(1, 2, 3), labels = c("High", "Moderate", "Low"))
data$sten.reg.mix <- factor(data$sten.reg.mix, levels = c(1, 2, 3), labels = c("Stenosis", "Regurgitation", "Mixed"))
ggplot(data, aes(x = factor(status), y = log.lvmi, fill = factor(status))) +
geom_boxplot() +
ggtitle("Boxplot of log.lvmi for Status") +
xlab("Status") +
ylab("log.lvmi") +
scale_fill_discrete(name = "Status")
dim(data)
str(data)
summary(data)
ggplot(data, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
ggtitle("Distribuzione dell'età") +
xlab("Età") +
ylab("Frequenza")
sum_males <- sum(data$sex == "Male")
sum_females <- sum(data$sex == "Female")
cat("Number of males:", sum_males, "\n")
cat("Number of females:", sum_females, "\n")
ggplot(data, aes(x = sex, fill = sex)) +
geom_bar() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution by Sex") +
theme_minimal()
#cor_matrix <- cor(data)
#print(cor_matrix)
#if (!require(corrplot)) {
install.packages("corrplot")
library(corrplot)
#}
#corrplot(cor_matrix, method = "circle")
ggplot(data, aes(x = age, y = log.lvmi)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "red", se = FALSE) +
ggtitle("Scatter Plot: età vs log.lvmi") +
xlab("Età") +
ylab("log.lvmi")
# The outcome variable is a survival object created with the time to event (fuyrs) and status indicator (status)
surv_obj <- Surv(data$fuyrs, data$status)
# Perform Cox regression for each predictor
# Excluding paz.id from the analysis as it's an identifier, not a predictor
variables <- c("log.lvmi", "sex", "age", "con.cabg", "creat", "lv", "sten.reg.mix")
# Store results in a list for easy access
univariate_models <- list()
for (var in variables) {
# Formula to dynamically create the regression model
formula <- as.formula(paste("surv_obj ~", var))
# Fit the Cox model
model <- coxph(formula, data = data)
# Print the summary of the model
print(summary(model))
# Store the model in the list
univariate_models[[var]] <- model
}
univariate_models[["log.lvmi"]]
univariate_models[["sex"]]
univariate_models[["age"]]
univariate_models[["con.cabg"]]
univariate_models[["creat"]]
univariate_models[["lv"]]
univariate_models[["sten.reg.mix"]]
base_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix, data = data, x=T)
summary(base_model)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test <- cox.zph(base_model)
# Plotting the residuals to visually inspect any trend indicating non-proportionality
plot(ph_test)  # Multiple plots if more than one covariate; assess each plot for trends over time
# Output the global test of proportional hazards from cox.zph
print(ph_test) # This will display the test statistics and p-values for each covariate
# Check the linearity of continuous variables using Martingale residuals from a null model
null_model <- coxph(Surv(fuyrs, status) ~ 1, data = data) # Null model with no covariates
# Selecting continuous variables to check for non-linearity
continuous_vars <- c("age", "creat")
# Plot Martingale residuals against each continuous variable
for(var in continuous_vars) {
# Plot residuals against continuous variables
plot(data[[var]], residuals(null_model, type = "martingale"), xlab = var, ylab = "Martingale residuals", main = paste("Linearity Check for", var))
abline(h = 0, col = "red")  # Horizontal line at zero to aid in visual assessment
}
augmented_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + log.lvmi, data = data, x=T)
summary(augmented_model)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test_augmented <- cox.zph(augmented_model)
# Plotting the residuals to visually inspect any trend indicating non-proportionality
plot(ph_test_augmented)  # Multiple plots if more than one covariate; assess each plot for trends over time
# Output the global test of proportional hazards from cox.zph
print(ph_test_augmented) # This will display the test statistics and p-values for each covariate
# Selecting continuous variables to check for non-linearity
continuous_vars_augmented <- c("age", "creat", "log.lvmi")  # Now including log.lvmi
# Plot Martingale residuals against each continuous variable
for(var in continuous_vars_augmented) {
# Plot residuals against continuous variables
plot(data[[var]], residuals(null_model, type = "martingale"), xlab = var, ylab = "Martingale residuals", main = paste("Linearity Check for", var))
abline(h = 0, col = "red")  # Horizontal line at zero to aid in visual assessment
}
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test_augmented <- cox.zph(augmented_model)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # For plotting
library(dplyr) # For data handling
library(readr)
library(survival) # Main library, used for implementing Cox Modeling
library(pROC) # For plotting ROC curves
library(survminer)
library(utils) #For not having to upload the txt each time
library(riskRegression) # For performance indicators
#setwd('~/Desktop/Data Science/Data Science Lab in Medicine/Big Data in Health Care/')
url <- "https://raw.githubusercontent.com/darthgween/BigDataInHealthCareProject/main/heart.valve.txt?token=GHSAT0AAAAAACR3GYSXO5Z3ARKVQY2S6SYSZRYZQWA"
data <- read.table(url, header = TRUE)
head(data)
data$sex <- factor(data$sex, levels = c(0, 1), labels = c("Male", "Female"))
data$con.cabg <- factor(data$con.cabg, levels = c(0, 1), labels = c("No", "Yes"))
data$lv <- factor(data$lv, levels = c(1, 2, 3), labels = c("High", "Moderate", "Low"))
data$sten.reg.mix <- factor(data$sten.reg.mix, levels = c(1, 2, 3), labels = c("Stenosis", "Regurgitation", "Mixed"))
ggplot(data, aes(x = factor(status), y = log.lvmi, fill = factor(status))) +
geom_boxplot() +
ggtitle("Boxplot of log.lvmi for Status") +
xlab("Status") +
ylab("log.lvmi") +
scale_fill_discrete(name = "Status")
dim(data)
str(data)
summary(data)
ggplot(data, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
ggtitle("Distribuzione dell'età") +
xlab("Età") +
ylab("Frequenza")
sum_males <- sum(data$sex == "Male")
sum_females <- sum(data$sex == "Female")
cat("Number of males:", sum_males, "\n")
cat("Number of females:", sum_females, "\n")
ggplot(data, aes(x = sex, fill = sex)) +
geom_bar() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution by Sex") +
theme_minimal()
#cor_matrix <- cor(data)
#print(cor_matrix)
#if (!require(corrplot)) {
install.packages("corrplot")
library(corrplot)
#}
#corrplot(cor_matrix, method = "circle")
ggplot(data, aes(x = age, y = log.lvmi)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "red", se = FALSE) +
ggtitle("Scatter Plot: età vs log.lvmi") +
xlab("Età") +
ylab("log.lvmi")
# The outcome variable is a survival object created with the time to event (fuyrs) and status indicator (status)
surv_obj <- Surv(data$fuyrs, data$status)
# Perform Cox regression for each predictor
# Excluding paz.id from the analysis as it's an identifier, not a predictor
variables <- c("log.lvmi", "sex", "age", "con.cabg", "creat", "lv", "sten.reg.mix")
# Store results in a list for easy access
univariate_models <- list()
for (var in variables) {
# Formula to dynamically create the regression model
formula <- as.formula(paste("surv_obj ~", var))
# Fit the Cox model
model <- coxph(formula, data = data)
# Print the summary of the model
print(summary(model))
# Store the model in the list
univariate_models[[var]] <- model
}
univariate_models[["log.lvmi"]]
univariate_models[["sex"]]
univariate_models[["age"]]
univariate_models[["con.cabg"]]
univariate_models[["creat"]]
univariate_models[["lv"]]
univariate_models[["sten.reg.mix"]]
base_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix, data = data, x=T)
summary(base_model)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test <- cox.zph(base_model)
# Plotting the residuals to visually inspect any trend indicating non-proportionality
plot(ph_test)  # Multiple plots if more than one covariate; assess each plot for trends over time
# Output the global test of proportional hazards from cox.zph
print(ph_test) # This will display the test statistics and p-values for each covariate
# Check the linearity of continuous variables using Martingale residuals from a null model
null_model <- coxph(Surv(fuyrs, status) ~ 1, data = data) # Null model with no covariates
# Selecting continuous variables to check for non-linearity
continuous_vars <- c("age", "creat")
# Plot Martingale residuals against each continuous variable
for(var in continuous_vars) {
# Plot residuals against continuous variables
plot(data[[var]], residuals(null_model, type = "martingale"), xlab = var, ylab = "Martingale residuals", main = paste("Linearity Check for", var))
abline(h = 0, col = "red")  # Horizontal line at zero to aid in visual assessment
}
augmented_model <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + log.lvmi, data = data, x=T)
summary(augmented_model)
# Evaluate the proportional hazards assumption using cox.zph function
# This function performs a test of proportional hazards based on the scaled Schoenfeld residuals
ph_test_augmented <- cox.zph(augmented_model)
# Plotting the residuals to visually inspect any trend indicating non-proportionality
plot(ph_test_augmented)  # Multiple plots if more than one covariate; assess each plot for trends over time
# Output the global test of proportional hazards from cox.zph
print(ph_test_augmented) # This will display the test statistics and p-values for each covariate
# Selecting continuous variables to check for non-linearity
continuous_vars_augmented <- c("age", "creat", "log.lvmi")  # Now including log.lvmi
# Plot Martingale residuals against each continuous variable
for(var in continuous_vars_augmented) {
# Plot residuals against continuous variables
plot(data[[var]], residuals(null_model, type = "martingale"), xlab = var, ylab = "Martingale residuals", main = paste("Linearity Check for", var))
abline(h = 0, col = "red")  # Horizontal line at zero to aid in visual assessment
}
augmented_model_2 <- coxph(Surv(fuyrs, status) ~ sex + age + con.cabg + creat + lv + sten.reg.mix + strata(log.lvmi), data = data, x=T)
summary(augmented_model_2)
